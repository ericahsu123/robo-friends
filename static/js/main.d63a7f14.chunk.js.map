{"version":3,"sources":["actions/types.js","reducers/index.js","reducers/robotsReducer.js","reducers/queryReducer.js","components/Card.jsx","components/CardList.jsx","components/SearchBox.jsx","actions/index.js","components/Loading.jsx","components/App.jsx","index.js"],"names":["combineReducers","robots","state","action","type","types","payload","query","Card","props","className","src","name","alt","style","backgroundColor","email","connect","searchRobots","filter","robot","toLowerCase","includes","map","key","id","changeSearchString","searchString","placeholder","onChange","event","target","value","Loading","fetchRobots","dispatch","a","axios","get","response","data","useEffect","marginTop","length","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"qOAAe,EACC,eADD,EAES,uBCETA,cAAgB,CAAEC,OCFlB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAOF,EAAOG,QAEhB,QACE,OAAOJ,IDJ2CK,MEFzC,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIC,EAAW,uCACrC,OAAQA,EAAOC,MACb,KAAKC,EACH,OAAOF,EAAOG,QAChB,QACE,OAAOJ,MCaEM,EAlBF,SAACC,GACZ,OACE,yBAAKC,UAAU,oBACb,yBAAKA,UAAU,SACb,yBACEC,IAAG,+BAA0BF,EAAMG,KAAhC,QACHC,IAAI,QACJC,MAAO,CAAEC,gBAAiB,yBAG9B,yBAAKL,UAAU,WACb,yBAAKA,UAAU,yBAAyBD,EAAMG,MAC9C,yBAAKF,UAAU,8BAA8BD,EAAMO,UCS5CC,eAJS,SAACf,GACvB,MAAO,CAAED,OAAQC,EAAMD,OAAQM,MAAOL,EAAMK,SAG/BU,EAlBE,SAACR,GAChB,IAAMS,EAAeT,EAAMR,OAAOkB,QAAO,SAACC,GACxC,OAAOA,EAAMR,KAAKS,cAAcC,SAASb,EAAMF,MAAMc,kBAGvD,OACE,yBAAKX,UAAU,YACZQ,EAAaK,KAAI,SAACH,GACjB,OAAO,kBAAC,EAAD,CAAMI,IAAKJ,EAAMK,GAAIb,KAAMQ,EAAMR,KAAMI,MAAOI,EAAMJ,e,yCCsBpDC,eANS,SAACf,GACvB,MAAO,CACLK,MAAOL,EAAMK,SAIuB,CAAEmB,mBCpBR,SAACC,GACjC,MAAO,CACLvB,KAAMC,EACNC,QAASqB,KDiBEV,EA9BG,SAACR,GAIjB,OACE,yBAAKC,UAAU,oCACb,yBAAKA,UAAU,QACb,4CAEF,yBAAKA,UAAU,cACb,yBAAKA,UAAU,iBACb,2BACEN,KAAK,OACLwB,YAAY,mBACZC,SAbW,SAACC,GACpBrB,EAAMiB,mBAAmBI,EAAMC,OAAOC,QAa9BA,MAAOvB,EAAMF,QAEf,uBAAGG,UAAU,sBEVRuB,EAVC,WACd,OACE,6BACE,yBAAKvB,UAAU,6BACb,yBAAKA,UAAU,kBAAf,cCyBOO,G,MAAAA,aAJS,SAACf,GACvB,MAAO,CAAED,OAAQC,EAAMD,UAGe,CAAEiC,YF5Bf,WACzB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,sEACkBC,IAAMC,IAC3B,8CAFG,OACCC,EADD,OAILJ,EAAS,CACP/B,KAAMC,EACNC,QAASiC,EAASC,OANf,2CAAP,wDE2BavB,EAtBH,SAACR,GAQX,OAPAgC,qBAAU,WACRhC,EAAMyB,gBAEL,IAKD,yBAAKxB,UAAU,+BACb,kBAAC,EAAD,MACA,yBAAKI,MAAO,CAAE4B,UAAW,UACE,IAAxBjC,EAAMR,OAAO0C,OAAe,kBAAC,EAAD,MAAc,kBAAC,EAAD,YCZ7CC,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,eAAe,W","file":"static/js/main.d63a7f14.chunk.js","sourcesContent":["export default {\n  FETCH_ROBOTS: 'FETCH_ROBOTS',\n  CHANGE_SEARCH_STRING: 'CHANGE_SEARCH_STRING',\n};\n","import { combineReducers } from 'redux';\nimport robotsReducer from './robotsReducer';\nimport queryReducer from './queryReducer';\n\nexport default combineReducers({ robots: robotsReducer, query: queryReducer });\n","import types from '../actions/types';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case types.FETCH_ROBOTS:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n","import types from '../actions/types';\n\nexport default (state = '', action) => {\n  switch (action.type) {\n    case types.CHANGE_SEARCH_STRING:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nconst Card = (props) => {\n  return (\n    <div className=\"ui centered card\">\n      <div className=\"image\">\n        <img\n          src={`https://robohash.org/${props.name}.png`}\n          alt=\"robot\"\n          style={{ backgroundColor: 'rgb(185, 226, 224)' }}\n        />\n      </div>\n      <div className=\"content\">\n        <div className=\"center aligned header\">{props.name}</div>\n        <div className=\"center aligned description\">{props.email}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Card from './Card';\n\nconst CardList = (props) => {\n  const searchRobots = props.robots.filter((robot) => {\n    return robot.name.toLowerCase().includes(props.query.toLowerCase());\n  });\n\n  return (\n    <div className=\"ui cards\">\n      {searchRobots.map((robot) => {\n        return <Card key={robot.id} name={robot.name} email={robot.email} />;\n      })}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { robots: state.robots, query: state.query };\n};\n\nexport default connect(mapStateToProps)(CardList);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { changeSearchString } from '../actions';\n\nconst SearchBox = (props) => {\n  const handleChange = (event) => {\n    props.changeSearchString(event.target.value);\n  };\n  return (\n    <div className=\"ui top fixed huge stackable menu\">\n      <div className=\"item\">\n        <h1>RoboFriends</h1>\n      </div>\n      <div className=\"right item\">\n        <div className=\"ui icon input\">\n          <input\n            type=\"text\"\n            placeholder=\"Search robots...\"\n            onChange={handleChange}\n            value={props.query}\n          />\n          <i className=\"search icon\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    query: state.query,\n  };\n};\n\nexport default connect(mapStateToProps, { changeSearchString })(SearchBox);\n","import axios from 'axios';\nimport types from './types';\n\nexport const fetchRobots = () => {\n  return async (dispatch) => {\n    const response = await axios.get(\n      'https://jsonplaceholder.typicode.com/users'\n    );\n    dispatch({\n      type: types.FETCH_ROBOTS,\n      payload: response.data,\n    });\n  };\n};\n\nexport const changeSearchString = (searchString) => {\n  return {\n    type: types.CHANGE_SEARCH_STRING,\n    payload: searchString,\n  };\n};\n","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div>\n      <div className=\"ui active inverted dimmer\">\n        <div className=\"ui text loader\">Loading</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Loading;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport Loading from './Loading';\nimport './styles.css';\nimport { fetchRobots } from '../actions';\n\nconst App = (props) => {\n  useEffect(() => {\n    props.fetchRobots();\n    // eslint-disable-next-line\n  }, []);\n  // console.log('query', query);\n  // console.log('robots', robots);\n\n  return (\n    <div className=\"ui container center aligned\">\n      <SearchBox />\n      <div style={{ marginTop: '120px' }}>\n        {props.robots.length === 0 ? <Loading /> : <CardList />}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return { robots: state.robots };\n};\n\nexport default connect(mapStateToProps, { fetchRobots })(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport reducers from './reducers';\nimport App from './components/App';\n\nconst store = createStore(reducers, applyMiddleware(reduxThunk));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}